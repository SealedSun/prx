/*
 * Prexonite, a scripting engine (Scripting Language -> Bytecode -> Virtual Machine)
 *  Copyright (C) 2007  Christian "SealedSun" Klauser
 *  E-mail  sealedsun a.t gmail d.ot com
 *  Web     http://www.sealedsun.ch/
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  Please contact me (sealedsun a.t gmail do.t com) if you need a different license.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, write to the Free Software Foundation, Inc.,
 *  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

Name prx\lib;
Description "Provides common routines for prx.";
Author SealedSun;
	
declare println as echo;

//Not all environments may support colors...
var supportsColors = supportsColors is null ? true : supportsColors;

//Run 'f' in a context where console output has the color 'color'.
function runInDifferentColor(ref f, color)
{
    if(supportsColors)
    {
    	var orig = ::Console.ForegroundColor;
    	::Console.ForegroundColor = color;
    	f();
    	::Console.ForegroundColor = orig;
    }
    else
    {
        f();   
    }
}

//Shortcuts for commonly used colorations
ref red = 
    if(supportsColors)
        f => runInDifferentColor(f, ::ConsoleColor.Red)
    else
        f => f.()
    ;
ref green = 
    if(supportsColors)
        f => runInDifferentColor(f, ::ConsoleColor.Green)
    else
        f => f.()
    ;

function readline = __console.ReadLine;
    
//Show prompt and read line
var prompt\color; 
function showPrompt(q) does
{
	declare var prompt\color as color;
	var originalColor;
    if(q == null)
        q = "PRX> ";
    runInDifferentColor( () => print(q), 
        color != null ? color : ::Console.ForegroundColor);
	return readline;
}

var prompt = null;

//Functions that provide access to the currently executing engine and application.
function thisEngine does asm { ldr.eng ret.value }
function thisApplication does asm { ldr.app ret.value }