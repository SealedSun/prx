<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <LangVersion>7.3</LangVersion>

  </PropertyGroup>

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <Version>1.91</Version>
    <Title>Prexonite Scripting Language</Title>
    <PackageDescription>An embeddable scripting language with a focus on meta programming and domain specific languages.</PackageDescription>
    <Description>$(PackageDescription)</Description>
    <Copyright>Christian Klauser © 2019</Copyright>
    <PackageLicenseExpression>BSD-3-Clause</PackageLicenseExpression>
    <IncludeSymbols>true</IncludeSymbols>
    <IncludeSource>true</IncludeSource>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <RepositoryUrl>https://github.com/chklauser/prx.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>

    <Product>Prexonite</Product>
    <Company>$(Product)</Company>
    <NeutralLanguage>en-US</NeutralLanguage>
  </PropertyGroup>

  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\PrexoniteTests\Prexonite.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <!-- CUSTOM TASKS -->
  <PropertyGroup>
    <!--<UseHostCompilerIfAvailable>False</UseHostCompilerIfAvailable> -->
    <BuildDependsOn>
      ExpressionParser;
      PrexoniteScanner;
      PrexoniteParser;
      $(BuildDependsOn);
    </BuildDependsOn>
    <ToolsDirectory>$(ProjectDir)../Tools</ToolsDirectory>
    <FramesDirectory>$(ToolsDirectory)</FramesDirectory>
    <PrexoniteScannerDefinition>Prexonite.lex</PrexoniteScannerDefinition>
    <PrexoniteGrammarDefinition>Prexonite__gen.atg</PrexoniteGrammarDefinition>
    <PTypeExpressionGrammarDefinition>PTypeExpression.atg</PTypeExpressionGrammarDefinition>
    <PrexoniteParserOutputFiles>Parser.cs</PrexoniteParserOutputFiles>
    <PTypeExpressionParserOutputFiles>Parser.cs;Scanner.cs</PTypeExpressionParserOutputFiles>
    <PrexoniteParserFiles>$(PxCocoOutputFiles)</PrexoniteParserFiles>
    <PTypeExpressionParserFiles>$(PxCocoOutputFiles)</PTypeExpressionParserFiles>
    <DirectDebug>False</DirectDebug>
  </PropertyGroup>
  <ItemGroup>
    <GrammarFragment Include="Compiler\Grammar\Header.atg" />
    <GrammarFragment Include="Compiler\Grammar\Scanner.atg" />
    <GrammarFragment Include="Compiler\Grammar\Parser*.atg" />
    <Compile Remove="Parser.cs" />
    <Compile Remove="Scanner.cs" />
    <None Remove="prxlib\legacy_symbols.pxs" />
    <None Remove="prxlib\prx.core.pxs" />
    <None Remove="prxlib\prx.prim.pxs" />
    <None Remove="prxlib\sh.pxs" />
    <None Remove="prxlib\sys.pxs" />
    <EmbeddedResource Include="prxlib\legacy_symbols.pxs" />
    <EmbeddedResource Include="prxlib\prx.core.pxs" />
    <EmbeddedResource Include="prxlib\prx.prim.pxs" />
    <EmbeddedResource Include="prxlib\sh.pxs" />
    <EmbeddedResource Include="prxlib\sys.pxs" />
    <GrammarFragment Include="Compiler\Grammar\Footer.atg" />
  </ItemGroup>
  <ItemGroup>
    <Grammar Include="PTypeExpression.atg" />
  </ItemGroup>

  <!-- These defitions are not used in a normal build. They can be useful for debugging PxCoco in the context of Prexonite. -->
  <!-- <PropertyGroup>
    <PxCocoDebugTaskExt Condition=" '$(MSBuildRuntimeType)' == 'Core' ">netcoreapp2.2\PxCoco.dll</PxCocoDebugTaskExt>
    <PxCocoDebugTaskExt Condition=" '$(MSBuildRuntimeType)' != 'Core' ">net48\PxCoco.exe</PxCocoDebugTaskExt>
    <PxCocoTaskAssembly>$(MSBuildThisFileDirectory)..\PxCoco\bin\Debug\$(PxCocoDebugTaskExt)</PxCocoTaskAssembly>
  </PropertyGroup>
  <UsingTask TaskName="PxCoco" AssemblyFile="$(PxCocoTaskAssembly)" />
  <UsingTask TaskName="Merge" AssemblyFile="$(PxCocoTaskAssembly)" /> -->

  <!-- PType Expression Parser Target -->
  <Target Name="ExpressionParser" BeforeTargets="BeforeBuild">
    <Message Text="Building type expression parser." />
    <PxCoco Grammar="$(PTypeExpressionGrammarDefinition)" Namespace="Prexonite.Internal" FramesDirectory="$(FramesDirectory)" DirectDebug="$(DirectDebug)" RelativePathRoot="$(ProjectDir)">
      <Output TaskParameter="OutputFiles" ItemName="PTypeExpressionParserFiles" />
    </PxCoco>
    <Copy SourceFiles="$(ProjectDir)Parser.cs;$(ProjectDir)Scanner.cs" DestinationFolder="$(ProjectDir)Internal" />
    <Delete Files="$(PTypeExpressionParserFiles)" DeletedFiles="$(ProjectDir)Parser.cs;$(ProjectDir)Scanner.cs" />
  </Target>

  <!-- Prexonite Parser Target -->
  <Target Name="PrexoniteParser" DependsOnTargets="PrexoniteGrammar" BeforeTargets="BeforeBuild">
    <PxCoco Grammar="$(PrexoniteGrammarDefinition)" Namespace="Prexonite.Compiler" FramesDirectory="$(FramesDirectory)" DirectDebug="$(DirectDebug)" RelativePathRoot="$(ProjectDir)">
      <Output TaskParameter="OutputFiles" ItemName="PrexoniteParserFiles" />
    </PxCoco>
    <!-- We use the CSFlex-generated scanner instead. -->
    <Copy SourceFiles="$(ProjectDir)/Parser.cs" DestinationFolder="$(ProjectDir)/Compiler" />
    <Delete Files="$(PrexoniteParserFiles)" DeletedFiles="$(ProjectDir)/Parser.cs" />
  </Target>

  <!-- Prexonite Grammar Merging Target -->
  <Target Name="PrexoniteGrammar" Outputs="$(ProjectDir)Prexonite__gen.atg" Inputs="@(GrammarFragment->'%(FullPath)')">
    <Merge InputFiles="@(GrammarFragment->'%(FullPath)')" OutputFile="$(ProjectDir)Prexonite__gen.atg" RelativePathRoot="$(ProjectDir)">
    </Merge>
    <Message Text="$(PrexoniteGrammarDefinition) is now ready." />
  </Target>
  <Target Name="PrexoniteScanner" Outputs="$(ProjectDir)/Compiler/Scanner.cs" Inputs="$(ProjectDir)/Compiler/$(PrexoniteScannerDefinition)">
    <Exec Command="&quot;$(ToolsDirectory)/csflex.exe&quot; --csharp --nested-default-skeleton --nobak $(PrexoniteScannerDefinition)" WorkingDirectory="$(ProjectDir)/Compiler" />
  </Target>

  <ItemGroup>
    <!-- This is a temporary artifact. The file gets copied into Compiler/Parser or Compiler/Internal and *should* be deleted afterwards.
         Sometimes, the deletion does not happen. In that case, the file must not be submitted to the compiler or we get duplicate definitions. -->
    <None Include="Parser.cs" />
    <None Include="Scanner.cs" />
  </ItemGroup>

  <!-- NUGET References -->
  <ItemGroup>
    <PackageReference Include="Lokad.ILPack" Version="0.1.1" />
    <PackageReference Include="PxCoco" Version="1.91.1" />
    <PackageReference Include="System.Reflection.Emit" Version="4.3.0" />
  </ItemGroup>
</Project>
