<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
// ReSharper disable RedundantUsingDirective
using System;
using System.Reflection;
using System.Collections.Generic;
using Prexonite.Types;
using Prexonite.Compiler.Cil;
using NUnit.Framework;
// ReSharper restore RedundantUsingDirective

// ReSharper disable RedundantExplicitArrayCreation
// ReSharper disable InconsistentNaming

namespace PrexoniteTests.Tests.Configurations
{
<# 
    // [testFile :: (test_file_name, [under_test], [test_deps], [test_case])] 
    foreach(var testFile in _getTestConfiguration()) 
    { 
#>
        internal abstract class <#=_toPsrClassName(testFile.TestFileName)#> : ScriptedUnitTestContainer
        {
            [TestFixtureSetUp]
            public void SetupTestFile()
            {
				var model = new TestModel
				{
					TestSuiteScript = @"<#=testFile.TestFileName#>",
					UnitsUnderTest = new TestDependency[]{
<#						foreach(var dep in testFile.UnitsUnderTest) { #>
							new TestDependency { ScriptName = @"<#=dep.FileName#>", Dependencies = new string[] {
<#								foreach(var d in dep.Dependencies) { #>
									@"<#=d#>",
<#								} #>
							}},
<#						} #>					
					},
					TestDependencies = new TestDependency[]{
<#						foreach(var dep in testFile.TestDependencies) { #>
							new TestDependency { ScriptName = @"<#=dep.FileName#>", Dependencies = new string[] {
<#								foreach(var d in dep.Dependencies) { #>
									@"<#=d#>",
<#								} #>
                                PrexoniteUnitTestFramework
							}},
<#						} #>					
					}
				};
				Runner.Configure(model, this);
            }

<#      foreach(var testCase in testFile.TestCases) { #>
            [Test]
            public void <#=testCase.Replace(@"\","_").Replace("$","_").Replace("'","_")#>()
            {
                RunUnitTest(@"<#=testCase#>");
            } 
<#      } #>
        }
<# } #>
}

// ReSharper restore RedundantExplicitArrayCreation
// ReSharper restore InconsistentNaming

<#@ include file="LoadConfiguration.t4" #>