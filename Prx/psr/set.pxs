
build does require = "struct.pxs";

function create_set()
{
    var tag = true;
    
    var store = {};
    foreach(var arg in var args)
        foreach(var x in arg)
            store[x] = tag;
    
    function add(this) =
        (var args) >> skip(1) >>
            each(arg => store[arg] = true);
    
    function remove(this) = 
        (var args) >> skip(1) >>
            forall(arg => store.Remove(arg));
            
    function contains(this) = 
        (var args) >> skip(1) >>
            forall(arg => { println(arg); return store.Contains(arg); });
        
    function count =
        store.Count;
        
    function GetEnumerator =
        store.GetEnumerator;   
        
    function ToString(this)
    {
        var sb = new System::Text::StringBuilder("{ ");
        var commaRequired = false;
        foreach(var kvp in store)
        {
            if(commaRequired)
                sb.Append(", ");
            else
                commaRequired = true;
            sb.append(kvp.Key);
        }
        if(commaRequired)
            sb.Append(" }");
        else
            sb.Append("}");
            
        return sb;
    }    
        
    return struct;    
}

function create_immutable_set(elements)
{
    elements = if(elements is Null) [] else all << distinct << elements; //all makes a copy
    
    function add(this) = 
        ((var args) >> skip(1)) + elements >> create_immutable_set;
        
    function remove(this) =
        elements >> except((var args) >> skip(1)) >> create_immutable_set;
        
    function contains(this) =
        (var args) >> skip(1) >>
            forall(arg => elements.Contains(arg));
            
    function count = 
        elements.Count; 
        
    function GetEnumerator =
        elements.GetEnumerator;
        
    function ToString(this) =
        elements.ToString;        
        
    return struct;                   
}

declare create_immutable_set as create_iset;
