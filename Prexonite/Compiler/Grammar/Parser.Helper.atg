/*
 * Prexonite, a scripting engine (Scripting Language -> Bytecode -> Virtual Machine)
 *  Copyright (C) 2007  Christian "SealedSun" Klauser
 *  E-mail  sealedsun a.t gmail d.ot com
 *  Web     http://www.sealedsun.ch/
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  Please contact me (sealedsun a.t gmail do.t com) if you need a different license.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, write to the Free Software Foundation, Inc.,
 *  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

Id<out string id>               (.  id = "\\NoId\\"; .) //<-- should never surface. this is for debugging purposes
=
    GlobalId<out id>
|   (   enabled
    |   disabled
    |   build
    |   add
    )                           (.  id = cache(t.val); .)
.

Boolean<out bool value>         (.  value = true; .)
=                   
	true          
|	false                       (.  value = false; .)
.

Integer<out int value>
=
	integer                     (.  if(!TryParseInteger(t.val, out value))
	                                    SemErr(t, "Cannot recognize integer " + t.val);
	                            .)
.

SignedInteger<out int value>    (. int modifier = 1; .)
=
    [   plus
    |   minus                   (. modifier = -1; .)
    ]   Integer<out value>      (. value = modifier * value; .)
.

Real<out double value>  
=
	(real | realLike)           (.  string real = t.val;
	                                if(!TryParseReal(real, out value))
	                                    SemErr(t, "Cannot recognize real " + real);
	                            .)
.

Version<out Version version>    // Cannot distinguish between Real and Version â†” must not appear in the same context.
=
    (realLike | version)        (.  var raw = t.val;
                                    if(!TryParseVersion(raw, out version))
                                        SemErr(t,"Cannot recognize \"" + raw + "\" as a version literal.");
                                .)
.

SignedReal<out double value>    (. value = 0.0; double modifier = 1.0; int ival; .)
=
    [   plus
    |   minus                   (. modifier = -1.0; .)
    ]   ( Real<out value> 
        | Integer<out ival>     (. value = ival; .)
        )
                                (. value = modifier * value; .)
.

String<out string value>
=
    string                      (. value = cache(t.val); .)
.

Null = null .