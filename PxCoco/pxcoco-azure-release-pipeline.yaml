# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  tags:
    include:
    - 'pxcoco/v.*'

pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: 'Release'
  Version: '$(Build.BuildNumber)'

steps:
- displayName: "Install .NET Core"
  task: DotNetCoreInstaller@0
  inputs:
    version: '2.2.300'

- powershell: |
    $ver = $env:BUILD_SOURCEBRANCH.remove(0, 9)
    Write-Host "##vso[task.setvariable variable=Version]$ver"
  displayName: 'Update version to Tag'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

- displayName: "Restore NuGet packages"
  task: DotNetCoreCLI@2
  inputs:
    command: restore
    projects: 'PxCoco/PxCoco.sln'

- displayName: "Build"
  task: DotNetCoreCLI@2
  inputs:
    command: build
    projects: 'PxCoco/PxCoco.sln'
    buildProperties: Version=$(Version)

# There are no automated tests for PxCoco.

- displayName: "Package"
  task: DotNetCoreCLI@2
  inputs:
    command: pack
    projects: 'PxCoco/PxCoco.csproj'
    nobuild: true
    configurationToPack: $(BuildConfiguration)
    buildProperties: Version=$(Version)

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'binaries'
    targetPath: '$(Build.ArtifactStagingDirectory)'
