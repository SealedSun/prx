/*
 * Prexonite, a scripting engine (Scripting Language -> Bytecode -> Virtual Machine)
 *  Copyright (C) 2007  Christian "SealedSun" Klauser
 *  E-mail  sealedsun a.t gmail d.ot com
 *  Web     http://www.sealedsun.ch/
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  Please contact me (sealedsun a.t gmail do.t com) if you need a different license.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, write to the Free Software Foundation, Inc.,
 *  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

Name beer\fancy;
Description "Prints the lyrics to the 99-n-of-beer-song with written numbers.";
Author SealedSun;
Entry song;

declare function noun, number;

function song(n)
{
    if(n == null) n = 99;
    function cap(s) = s.Substring(0,1).ToUpper + s.Substring(1);
    while(n > -1)
    {
        println( "$(cap(noun(n))) on the wall, $(noun(n)).");
        if(n-- == 0)
            println("Go to the store and buy some more, $(noun(99)) on the wall.");
        else
            println("Take one down and pass it around, $(noun(n)) of beer on the wall.");
        println;
    }
}

function noun(n)
{
    if(n == 1) 
        var r = "one bottle";
    else if(n == 0)
        r = "no more bottles";
    else
    {
        function number
        {
            declare var unitsDigit, tensString, tensColumn;
            var tens = n / 10;
            var units = n mod 10;
            if(n < 10)
                return unitsDigit[n];
            else if(n < 20)
                return tensString[n-10];
            else if(units == 0)
                return tensColumn[tens];
            else
                return tensColumn[tens] + "-" + unitsDigit[units];     
        }
        r = number + " bottles";
    }
    
    return r + " of beer";
}

var unitsDigit = [
    "zero",
    "one",
    "two",
    "three",
    "four",
    "five",
    "six",
    "seven",
    "eight",
    "nine"
];

var tensString = [
    "ten",
    "eleven",
    "twelve",
    "thirteen",
    "fourteen",
    "fifteen",
    unitsDigit[6] + "teen",
    unitsDigit[7] + "teen",
    "eighteen",
    unitsDigit[9] + "teen"
];

var tensColumn = [
    "",
    "ten",
    "twenty",
    "thirty",
    "fourty",
    "fifty",
    "sixty",
    "seventy",
    "eighty",
    "ninety"
];